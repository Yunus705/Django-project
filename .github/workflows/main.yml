name: Django CI/CD with Security Scan 

on:
  push:
    branches:
      - main

jobs:
  trivy_scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.60.0/trivy_0.60.0_Linux-64bit.tar.gz
          tar -xvzf trivy_0.60.0_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/

      - name: Scan Dockerfile for vulnerabilities
        run: trivy config .

      - name: Build Docker Image for Scanning
        run: docker build -t django-app:latest .

      - name: Scan Docker Image for vulnerabilities
        run: trivy image django-app:latest
  
  sonar_scan:
    name: SonarQube Cloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK (for SonarQube)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
          unzip sonar-scanner.zip
          mv sonar-scanner-4.7.0.2747-linux sonar-scanner
          export PATH=$PATH:$PWD/sonar-scanner/bin
          sonar-scanner \
            -Dsonar.projectKey=Yunus705_Django-project_bd056fac-88fc-45de-9705-776673713da4 \
            -Dsonar.organization=Yunus705 \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://3.110.200.197:9000/ \
            -Dsonar.login=$SONAR_TOKEN

  deploy:
    name: Deploy Django App
    runs-on: ubuntu-latest
    needs: [trivy_scan, sonar_scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}  # Your EC2's public IP or hostname .
          username: ubuntu  # Assuming your EC2 is running Ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}  # SSH private key stored in GitHub secrets
          script: |
            # Create /home/ubuntu/app directory if it doesn't exist and clone repository
            if [ ! -d "/home/ubuntu/app" ]; then
              echo "Directory /home/ubuntu/app not found. Cloning repository..."
              git clone https://github.com/Yunus705/Django-project.git /home/ubuntu/app
            else
              cd /home/ubuntu/app
              git pull origin main
            fi
            
            # Install Docker Compose if not already installed
            if ! command -v docker-compose &> /dev/null; then
              echo "Docker Compose not found, installing..."
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Build, down, and up the Docker containers
            cd /home/ubuntu/app
            docker-compose -f /home/ubuntu/app/docker-compose.yml build
            docker-compose -f /home/ubuntu/app/docker-compose.yml down
            docker-compose -f /home/ubuntu/app/docker-compose.yml up -d
